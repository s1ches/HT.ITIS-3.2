static_resources:
  listeners:
  - name: listener_http
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          http2_protocol_options: {}  # Включаем поддержку HTTP/2 для gRPC
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"  # Все запросы будут перенаправлены на gRPC-сервис
                route:
                  cluster: chat_service
          http_filters:
          - name: envoy.filters.http.cors  # Добавляем CORS для React-приложения
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
              allow_origin_string_match:
              - prefix: "*"  # Разрешить все домены (для тестирования)
              allow_methods: "GET, POST, PUT, DELETE, OPTIONS"
              allow_headers: "content-type, authorization, grpc-timeout, user-agent, te"  # Добавляем gRPC-заголовки
              expose_headers: "content-type, grpc-status, grpc-message"  # Добавляем gRPC-заголовки
              max_age: "86400"
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
  - name: chat_service
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}  # Включаем HTTP/2 для gRPC
    load_assignment:
      cluster_name: chat_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: chat-service  # Имя сервиса из docker-compose
                port_value: 80  # Порт, на котором работает gRPC-сервис

admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901